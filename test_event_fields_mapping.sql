-- =====================================================
-- TESTE DE MAPEAMENTO DOS CAMPOS DA TABELA EVENTS
-- =====================================================
-- Execute este script ap√≥s criar um evento para verificar
-- se todos os campos est√£o sendo salvos corretamente

DO $$
DECLARE
    event_record RECORD;
    null_fields TEXT[] := ARRAY[]::TEXT[];
    filled_fields TEXT[] := ARRAY[]::TEXT[];
    total_fields INTEGER := 0;
    null_count INTEGER := 0;
BEGIN
    RAISE NOTICE 'üîç VERIFICANDO MAPEAMENTO DOS CAMPOS DA TABELA EVENTS...';
    RAISE NOTICE '';
    
    -- Buscar o evento mais recente para an√°lise
    SELECT * INTO event_record 
    FROM events 
    ORDER BY created_at DESC 
    LIMIT 1;
    
    IF NOT FOUND THEN
        RAISE NOTICE '‚ùå Nenhum evento encontrado na tabela. Crie um evento primeiro.';
        RETURN;
    END IF;
    
    RAISE NOTICE 'üìã ANALISANDO EVENTO: "%"', event_record.title;
    RAISE NOTICE 'üÜî ID: %', event_record.id;
    RAISE NOTICE 'üìÖ Criado em: %', event_record.created_at;
    RAISE NOTICE '';
    
    -- =====================================================
    -- VERIFICAR CAMPOS OBRIGAT√ìRIOS (NOT NULL)
    -- =====================================================
    RAISE NOTICE 'üö® CAMPOS OBRIGAT√ìRIOS (NOT NULL):';
    
    -- Campos obrigat√≥rios b√°sicos
    IF event_record.title IS NULL OR event_record.title = '' THEN
        RAISE NOTICE '   ‚ùå title: NULL ou vazio';
        null_fields := array_append(null_fields, 'title');
    ELSE
        RAISE NOTICE '   ‚úÖ title: "%"', event_record.title;
        filled_fields := array_append(filled_fields, 'title');
    END IF;
    
    IF event_record.organizer_id IS NULL THEN
        RAISE NOTICE '   ‚ùå organizer_id: NULL';
        null_fields := array_append(null_fields, 'organizer_id');
    ELSE
        RAISE NOTICE '   ‚úÖ organizer_id: %', event_record.organizer_id;
        filled_fields := array_append(filled_fields, 'organizer_id');
    END IF;
    
    IF event_record.start_date IS NULL THEN
        RAISE NOTICE '   ‚ùå start_date: NULL';
        null_fields := array_append(null_fields, 'start_date');
    ELSE
        RAISE NOTICE '   ‚úÖ start_date: %', event_record.start_date;
        filled_fields := array_append(filled_fields, 'start_date');
    END IF;
    
    IF event_record.end_date IS NULL THEN
        RAISE NOTICE '   ‚ùå end_date: NULL (PROBLEMA!)';
        null_fields := array_append(null_fields, 'end_date');
    ELSE
        RAISE NOTICE '   ‚úÖ end_date: %', event_record.end_date;
        filled_fields := array_append(filled_fields, 'end_date');
    END IF;
    
    IF event_record.location IS NULL OR event_record.location = '' THEN
        RAISE NOTICE '   ‚ùå location: NULL ou vazio';
        null_fields := array_append(null_fields, 'location');
    ELSE
        RAISE NOTICE '   ‚úÖ location: "%"', event_record.location;
        filled_fields := array_append(filled_fields, 'location');
    END IF;
    
    IF event_record.status IS NULL OR event_record.status = '' THEN
        RAISE NOTICE '   ‚ùå status: NULL ou vazio';
        null_fields := array_append(null_fields, 'status');
    ELSE
        RAISE NOTICE '   ‚úÖ status: "%"', event_record.status;
        filled_fields := array_append(filled_fields, 'status');
    END IF;
    
    IF event_record.category IS NULL OR event_record.category = '' THEN
        RAISE NOTICE '   ‚ùå category: NULL ou vazio (PROBLEMA!)';
        null_fields := array_append(null_fields, 'category');
    ELSE
        RAISE NOTICE '   ‚úÖ category: "%"', event_record.category;
        filled_fields := array_append(filled_fields, 'category');
    END IF;
    
    IF event_record.price IS NULL THEN
        RAISE NOTICE '   ‚ùå price: NULL';
        null_fields := array_append(null_fields, 'price');
    ELSE
        RAISE NOTICE '   ‚úÖ price: R$ %', event_record.price;
        filled_fields := array_append(filled_fields, 'price');
    END IF;
    
    -- =====================================================
    -- VERIFICAR CAMPOS OPCIONAIS IMPORTANTES
    -- =====================================================
    RAISE NOTICE '';
    RAISE NOTICE 'üìä CAMPOS OPCIONAIS IMPORTANTES:';
    
    -- Campos de controle de ingressos
    IF event_record.available_tickets IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è available_tickets: NULL (deveria ser calculado)';
        null_fields := array_append(null_fields, 'available_tickets');
    ELSE
        RAISE NOTICE '   ‚úÖ available_tickets: %', event_record.available_tickets;
        filled_fields := array_append(filled_fields, 'available_tickets');
    END IF;
    
    IF event_record.total_tickets IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è total_tickets: NULL (deveria ser calculado)';
        null_fields := array_append(null_fields, 'total_tickets');
    ELSE
        RAISE NOTICE '   ‚úÖ total_tickets: %', event_record.total_tickets;
        filled_fields := array_append(filled_fields, 'total_tickets');
    END IF;
    
    IF event_record.sold_tickets IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è sold_tickets: NULL (deveria ser 0)';
        null_fields := array_append(null_fields, 'sold_tickets');
    ELSE
        RAISE NOTICE '   ‚úÖ sold_tickets: %', event_record.sold_tickets;
        filled_fields := array_append(filled_fields, 'sold_tickets');
    END IF;
    
    -- Campos de localiza√ß√£o detalhada
    IF event_record.location_type IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è location_type: NULL (deveria ter valor)';
        null_fields := array_append(null_fields, 'location_type');
    ELSE
        RAISE NOTICE '   ‚úÖ location_type: "%"', event_record.location_type;
        filled_fields := array_append(filled_fields, 'location_type');
    END IF;
    
    IF event_record.address IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è address: NULL (endere√ßo completo)';
        null_fields := array_append(null_fields, 'address');
    ELSE
        RAISE NOTICE '   ‚úÖ address: "%"', event_record.address;
        filled_fields := array_append(filled_fields, 'address');
    END IF;
    
    -- Campos de metadados da imagem
    IF event_record.banner_metadata IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è banner_metadata: NULL (metadados da imagem)';
        null_fields := array_append(null_fields, 'banner_metadata');
    ELSE
        RAISE NOTICE '   ‚úÖ banner_metadata: %', event_record.banner_metadata;
        filled_fields := array_append(filled_fields, 'banner_metadata');
    END IF;
    
    IF event_record.banner_alt_text IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è banner_alt_text: NULL (texto alternativo)';
        null_fields := array_append(null_fields, 'banner_alt_text');
    ELSE
        RAISE NOTICE '   ‚úÖ banner_alt_text: "%"', event_record.banner_alt_text;
        filled_fields := array_append(filled_fields, 'banner_alt_text');
    END IF;
    
    -- Campos de venda
    IF event_record.ticket_sales_start IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è ticket_sales_start: NULL (in√≠cio das vendas)';
        null_fields := array_append(null_fields, 'ticket_sales_start');
    ELSE
        RAISE NOTICE '   ‚úÖ ticket_sales_start: %', event_record.ticket_sales_start;
        filled_fields := array_append(filled_fields, 'ticket_sales_start');
    END IF;
    
    -- Tags e categoriza√ß√£o
    IF event_record.tags IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è tags: NULL (deveria ter pelo menos categoria)';
        null_fields := array_append(null_fields, 'tags');
    ELSE
        RAISE NOTICE '   ‚úÖ tags: %', event_record.tags;
        filled_fields := array_append(filled_fields, 'tags');
    END IF;
    
    IF event_record.subject IS NULL THEN
        RAISE NOTICE '   ‚ö†Ô∏è subject: NULL (assunto do evento)';
        null_fields := array_append(null_fields, 'subject');
    ELSE
        RAISE NOTICE '   ‚úÖ subject: "%"', event_record.subject;
        filled_fields := array_append(filled_fields, 'subject');
    END IF;
    
    -- =====================================================
    -- RESUMO ESTAT√çSTICO
    -- =====================================================
    total_fields := array_length(filled_fields, 1) + array_length(null_fields, 1);
    null_count := array_length(null_fields, 1);
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìä RESUMO ESTAT√çSTICO:';
    RAISE NOTICE '   üìà Total de campos verificados: %', total_fields;
    RAISE NOTICE '   ‚úÖ Campos preenchidos: % (%%)', 
        array_length(filled_fields, 1), 
        ROUND((array_length(filled_fields, 1)::NUMERIC / total_fields * 100), 1);
    RAISE NOTICE '   ‚ùå Campos NULL: % (%%)', 
        null_count, 
        ROUND((null_count::NUMERIC / total_fields * 100), 1);
    
    -- =====================================================
    -- DIAGN√ìSTICO E RECOMENDA√á√ïES
    -- =====================================================
    RAISE NOTICE '';
    RAISE NOTICE 'üí° DIAGN√ìSTICO:';
    
    IF null_count = 0 THEN
        RAISE NOTICE '   üéâ PERFEITO! Todos os campos importantes est√£o sendo salvos.';
    ELSIF null_count <= 3 THEN
        RAISE NOTICE '   ‚ö†Ô∏è ATEN√á√ÉO: Alguns campos opcionais est√£o NULL.';
        RAISE NOTICE '   üìù Campos NULL: %', array_to_string(null_fields, ', ');
    ELSE
        RAISE NOTICE '   üö® PROBLEMA: Muitos campos est√£o NULL!';
        RAISE NOTICE '   üìù Campos NULL: %', array_to_string(null_fields, ', ');
        RAISE NOTICE '   üí° Execute as corre√ß√µes no EventFormModal.tsx';
    END IF;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üîß PR√ìXIMOS PASSOS:';
    RAISE NOTICE '   1. Se h√° campos NULL importantes, verifique o EventFormModal.tsx';
    RAISE NOTICE '   2. Confirme se os dados do formul√°rio est√£o sendo capturados';
    RAISE NOTICE '   3. Teste criar um novo evento ap√≥s as corre√ß√µes';
    RAISE NOTICE '   4. Execute este script novamente para verificar melhorias';

EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE '‚ùå ERRO durante verifica√ß√£o: %', SQLERRM;
END $$;