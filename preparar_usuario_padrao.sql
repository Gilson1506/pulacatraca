-- =====================================================
-- PREPARA√á√ÉO: GARANTIR USU√ÅRIO PADR√ÉO NA TABELA PROFILES
-- =====================================================
-- Execute ANTES do trigger para garantir que existe um user_id v√°lido

-- 1. VERIFICAR SE TABELA PROFILES EXISTE
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.tables 
        WHERE table_name = 'profiles'
    ) THEN
        RAISE NOTICE '‚ö†Ô∏è ATEN√á√ÉO: Tabela profiles n√£o existe!';
        RAISE NOTICE 'üîß Criando tabela profiles b√°sica...';
        
        CREATE TABLE profiles (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            email TEXT UNIQUE NOT NULL,
            role TEXT DEFAULT 'user',
            name TEXT,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );
        
        RAISE NOTICE '‚úÖ Tabela profiles criada';
    ELSE
        RAISE NOTICE '‚úÖ Tabela profiles existe';
    END IF;
END $$;

-- 2. VERIFICAR/CRIAR USU√ÅRIO PADR√ÉO PARA SISTEMA
DO $$
DECLARE
    v_admin_id UUID;
    v_user_count INTEGER;
BEGIN
    -- Contar usu√°rios existentes
    SELECT COUNT(*) INTO v_user_count FROM profiles;
    
    RAISE NOTICE 'Usu√°rios existentes na tabela profiles: %', v_user_count;
    
    -- Se n√£o h√° usu√°rios, criar um admin padr√£o
    IF v_user_count = 0 THEN
        RAISE NOTICE 'üìù Criando usu√°rio admin padr√£o para o sistema...';
        
        INSERT INTO profiles (
            id,
            email,
            role,
            name,
            created_at,
            updated_at
        ) VALUES (
            gen_random_uuid(),
            'admin@sistema.com',
            'admin',
            'Administrador do Sistema',
            NOW(),
            NOW()
        ) RETURNING id INTO v_admin_id;
        
        RAISE NOTICE '‚úÖ Usu√°rio admin criado com ID: %', v_admin_id;
        RAISE NOTICE 'üìß Email: admin@sistema.com';
        RAISE NOTICE 'üë§ Role: admin';
        
    ELSE
        -- Verificar se existe pelo menos um admin ou organizador
        SELECT COUNT(*) INTO v_user_count 
        FROM profiles 
        WHERE role IN ('admin', 'organizer');
        
        IF v_user_count = 0 THEN
            RAISE NOTICE '‚ö†Ô∏è Nenhum admin/organizador encontrado';
            RAISE NOTICE 'üîß Promovendo primeiro usu√°rio para admin...';
            
            UPDATE profiles 
            SET role = 'admin', 
                updated_at = NOW()
            WHERE id = (SELECT id FROM profiles ORDER BY created_at ASC LIMIT 1)
            RETURNING id INTO v_admin_id;
            
            RAISE NOTICE '‚úÖ Usu√°rio promovido para admin: %', v_admin_id;
        ELSE
            RAISE NOTICE '‚úÖ Admin/organizador j√° existe (%)', v_user_count;
        END IF;
    END IF;
END $$;

-- 3. MOSTRAR USU√ÅRIOS DISPON√çVEIS PARA O TRIGGER
SELECT 
    'USUARIOS_DISPONIVEIS' as info,
    id,
    email,
    role,
    name,
    created_at
FROM profiles 
ORDER BY 
    CASE role 
        WHEN 'admin' THEN 1
        WHEN 'organizer' THEN 2
        ELSE 3
    END,
    created_at ASC;

-- 4. VERIFICAR SE TRIGGER PODE FUNCIONAR
DO $$
DECLARE
    v_user_id UUID;
BEGIN
    -- Tentar encontrar usu√°rio para usar no trigger
    SELECT id INTO v_user_id
    FROM profiles 
    WHERE role IN ('admin', 'organizer')
    ORDER BY created_at ASC
    LIMIT 1;
    
    IF FOUND THEN
        RAISE NOTICE 'üéØ PRONTO! Trigger pode usar user_id: %', v_user_id;
        RAISE NOTICE '‚úÖ Execute agora: trigger_auto_create_tickets_fixed_user_id.sql';
    ELSE
        -- Tentar qualquer usu√°rio
        SELECT id INTO v_user_id
        FROM profiles 
        ORDER BY created_at ASC
        LIMIT 1;
        
        IF FOUND THEN
            RAISE NOTICE 'üéØ PRONTO! Trigger pode usar user_id: %', v_user_id;
            RAISE NOTICE '‚ö†Ô∏è Usu√°rio n√£o √© admin/organizador, mas funciona';
            RAISE NOTICE '‚úÖ Execute agora: trigger_auto_create_tickets_fixed_user_id.sql';
        ELSE
            RAISE NOTICE '‚ùå ERRO: Ainda n√£o h√° usu√°rios dispon√≠veis!';
            RAISE NOTICE 'üîß Algo deu errado na cria√ß√£o do usu√°rio padr√£o';
        END IF;
    END IF;
END $$;

RAISE NOTICE 'üéØ PREPARA√á√ÉO CONCLU√çDA!';
RAISE NOTICE 'üìù Agora execute: trigger_auto_create_tickets_fixed_user_id.sql';