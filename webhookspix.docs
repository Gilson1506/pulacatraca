Webhooks
Os webhooks permitem que os aplicativos forne√ßam informa√ß√µes em tempo real sempre que um evento ocorre sem a necessidade de solicita√ß√µes constantes. Assim, requisi√ß√µes sucessivas para verificar se o status da opera√ß√£o foi alterada tornam-se desnecess√°rias. Ap√≥s configurar os webhooks, o Pagbank enviar√° notifica√ß√µes via webhook para seu ambiente sempre que um evento (uma mudan√ßa de status de transa√ß√£o) acontecer, possibilitando a automa√ß√£o de seus processos de gest√£o de vendas.

üìò
Formato e conte√∫do dos webhooks

Por padr√£o nossos webhooks possuem o mesmo payload (formato e conte√∫do) do response s√≠ncrono das requisi√ß√µes das APIs na nova plataforma.

Configurando o recebimento de notifica√ß√£o
Para receber notifica√ß√µes via webhook utilizando a API de Pedidos, √© necess√°rio enviar no payload o campo opcional notification_urls. Assim, sempre que ocorrer um evento nessa transa√ß√£o, o PagSeguro enviar√° as notifica√ß√µes para a URL de destino (m√©todo POST).

No bloco de c√≥digo a seguir s√£o apresentados exemplos de payload enviados na notifica√ß√£o para transa√ß√µes utilizando PIX e cart√£o de cr√©dito:

Pedido pago com PIX
Pedido pago com Cart√£o de Cr√©dito

{
    "id": "ORDE_F87334AC-BB8B-42E2-AA85-8579F70AA328",
    "reference_id": "ex-00001",
    "created_at": "2020-11-21T23:23:22.69-03:00",
    "shipping": {
        "address": {
            "street": "Avenida Brigadeiro Faria Lima",
            "number": "1384",
            "complement": "apto 12",
            "locality": "Pinheiros",
            "city": "S√£o Paulo",
            "region_code": "SP",
            "country": "BRA",
            "postal_code": "01452002"
        }
    },
    "items": [
        {
            "reference_id": "referencia do item",
            "name": "nome do item",
            "quantity": 1,
            "unit_amount": 500
        }
    ],
    "customer": {
        "name": "Jose da Silva",
        "email": "email@test.com",
        "tax_id": "12345678909",
        "phones": [
            {
                "country": "55",
                "area": "11",
                "number": "999999999",
                "type": "MOBILE"
            }
        ]
    },
    "charges": [
        {
            "id": "CHAR_F1F10115-09F4-4560-85F5-A828D9F96300",
            "reference_id": "referencia da cobranca",
            "status": "PAID",
            "created_at": "2020-11-21T23:30:22.695-03:00",
            "paid_at": "2020-11-21T23:30:24.352-03:00",
            "description": "descricao da cobranca",
            "amount": {
                "value": 500,
                "currency": "BRL",
                "summary": {
                    "total": 500,
                    "paid": 500,
                    "refunded": 0
                }
            },
            "payment_response": {
                "code": "20000",
                "message": "SUCESSO",
                "reference": "1606012224352"
            },
            "payment_method": {
                "type": "PIX",
              	"pix":{
                	"notification_id": "NTF_13EE7E12-E1E0-4A32-8E1B-B7C06EA49B7F",
                  "end_to_end_id": "E18236120202306271832s05145d8d3d",
                  "holder": {
                        "name": "Francisco da Silva",
                        "tax_id": "***534218**"
                  }
                }
            },
            "links": [
                {
                    "rel": "SELF",
                    "href": "https://sandbox.api.pagseguro.com/charges/CHAR_F1F10115-09F4-4560-85F5-A828D9F96300",
                    "media": "application/json",
                    "type": "GET"
                },
                {
                    "rel": "CHARGE.CANCEL",
                    "href": "https://sandbox.api.pagseguro.com/charges/CHAR_F1F10115-09F4-4560-85F5-A828D9F96300/cancel",
                    "media": "application/json",
                    "type": "POST"
                }
            ]
        }
    ],
    "qr_code": [
        {
            "id": "QRCO_86FE511B-E945-4FE1-BB5D-297974C0DB74",
            "amount": {
                "value": 500
            },
            "text": "00020101021226600016BR.COM.PAGSEGURO013686FE511B-E945-4FE1-BB5D-297974C0DB7452048999530398654045.005802BR5922Rafael Gouveia Firmino6009SAO PAULO63049879",
            "links": [
                {
                    "rel": "QRCODE.PNG",
                    "href": "https://sandbox.api.pagseguro.com/qrcode/QRCO_86FE511B-E945-4FE1-BB5D-297974C0DB74/png",
                    "media": "image/png",
                    "type": "GET"
                },
                {
                    "rel": "QRCODE.BASE64",
                    "href": "https://sandbox.api.pagseguro.com/qrcode/QRCO_86FE511B-E945-4FE1-BB5D-297974C0DB74/base64",
                    "media": "text/plain",
                    "type": "GET"
                }
            ]
        }
    ],
    "links": [
        {
            "rel": "SELF",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_F87334AC-BB8B-42E2-AA85-8579F70AA328",
            "media": "application/json",
            "type": "GET"
        },
        {
            "rel": "PAY",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_F87334AC-BB8B-42E2-AA85-8579F70AA328/pay",
            "media": "application/json",
            "type": "POST"
        }
    ]
}
üëç
Confirmando autenticidade da notifica√ß√£o

√â importante se certificar de que as notifica√ß√µes enviadas ao seu sistema s√£o de propriedade e origem do Pagbank e que o conte√∫do n√£o foi manipulado ou sofreu nenhuma interven√ß√£o externa. Dessa forma, voc√™ pode fazer uma confirma√ß√£o de autenticidade e garantir a integridade das notifica√ß√µes recebidas pelo seu sistema.

Veja como confirmar a autenticidade da notifica√ß√£o usando SHA256 aqui.

Headers de identifica√ß√£o
O header serve para identificar o produto Pagbank, que originou o pedido. A tabela a seguir apresenta os poss√≠veis tipos de produtos e seus respectivos ids.

Header	Valor	Tipo
x-product-origin	ORDER	String (128 caracteres)
CHECKOUT
x-product-id	ORDE_XXXXXXXXXXXX
CHEC_XXXXXXXXXXXX
Status de eventos transacionais
Os status de transa√ß√£o pode variar de um m√©todo de pagamento para outro. A tabela a seguir apresenta os poss√≠veis status para transa√ß√µes realizadas com Cart√£o de Cr√©dito e Boleto Banc√°rio.

M√©todo de pagamento	Status transacional	Descri√ß√£o
Cart√£o de Cr√©dito	AUTHORIZED	Esse status indica que a transa√ß√£o foi autorizada.
PAID	A transa√ß√£o foi conclu√≠da com sucesso.
IN_ANALYSIS	A transa√ß√£o est√° em an√°lise pela operadora do Cart√£o de Cr√©dito.
DECLINED	Esse status indica que a transa√ß√£o foi rejeitada.
CANCELED	A transa√ß√£o foi cancelada sem ter sido finalizada.
Boleto Banc√°rio	WAITING	Aguardando pagamento ou aprova√ß√£o do Boleto Banc√°rio.
PAID	A transa√ß√£o foi conclu√≠da com sucesso.
CANCELED	A transa√ß√£o foi cancelada sem ter sido finalizada. Quando o comprador opta por pagar com Boleto Banc√°rio e n√£o finaliza o pagamento, a transa√ß√£o assume este status.
Eventos p√≥s-transacionais
‚ùóÔ∏è
ATEN√á√ÉO

No momento, eventos de p√≥s-transa√ß√£o (disponibiliza√ß√£o de saldo, chargebacks e cancelamentos) ser√£o enviados para a mesma URL, mas em outro formato, conforme exemplo abaixo.

EVENTO: CHARGE Dispon√≠vel

notificationCode=093C100E7FA87FA8C0B664B79F8359773B96
notificationType=transaction
A tabela a seguir apresenta os poss√≠veis status de eventos p√≥s transacionais para pedidos com Cart√£o de Cr√©dito e Boleto Banc√°rio.

M√©todo de pagamento	Status p√≥s-transacional	Descri√ß√£o
Cart√£o de Cr√©dito e
Boleto Banc√°rio	Dispon√≠vel	Este status indica que o valor da transa√ß√£o est√° dispon√≠vel para saque.
Devolvida	O valor da transa√ß√£o foi devolvido ao comprador.
Cancelada	A transa√ß√£o foi cancelada sem ter sido finalizada. Por exemplo, quando o comprador opta por pagar com
Boleto Banc√°rio e n√£o finaliza o pagamento, a transa√ß√£o assume este status.
Reten√ß√£o tempor√°ria	O comprador abriu uma solicita√ß√£o de chargeback junto √† operadora de cart√£o de cr√©dito.
Os passos seguintes descrevem como voc√™ deve proceder com a identifica√ß√£o de eventos p√≥s-transacionais.

1. Tratar a notifica√ß√£o
O primeiro passo para proceder com notifica√ß√µes derivadas de eventos p√≥s-transacionais √© tratar a notifica√ß√£o. A tabela a seguir apresenta a descri√ß√£o dos par√¢metros que voc√™ receber√° na resposta:

Campo	Tipo	Descri√ß√£o
notificationCode	String (36 caracteres)	Este campo identifica a notifica√ß√£o. Ele √© usado para consultar a notifica√ß√£o e obter os dados da transa√ß√£o. Note que o c√≥digo que identifica a notifica√ß√£o n√£o √© o mesmo c√≥digo que identifica a transa√ß√£o.
notificationType	String (41 caracteres)	Tipo de notifica√ß√£o enviada.
token_api	String	Esse par√¢metro corresponde a chave de autentica√ß√£o utilizada nas requisi√ß√µes da API de Cobran√ßa (Charge).
2. Consultar as informa√ß√µes no Pagbank
Para saber o status que foi notificado nesse formato, √© necess√°rio realizar um GET na API de notifica√ß√£o, cujo endpoint √© apresentado como segue:

Endpoint de Notifica√ß√£o

<https://ws.pagseguro.uol.com.br/v3/transactions/notifications/{notificationCode}?email={email_conta_pagseguro}&token={token_api}>
O bloco de c√≥digo a seguir apresenta esse procedimento para as liguagens Java e Python.

Java
Python

import java.io.IOException;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

private static final String URL = "https://ws.pagseguro.uol.com.br/v3/transactions/notifications/{{notificationCode}}?email={{email}}&token={{token}}";

try {
      CloseableHttpClient client = HttpClients.createDefault();
      HttpGet getRequest = new HttpGet(URL);
      getRequest.setHeader("Content-Type", "application/xml");
      CloseableHttpResponse response = client.execute(getRequest);
      String result = EntityUtils.toString(response.getEntity());
      System.out.println(result);
      client.close();
      return response;

} catch (IOException e) {
	e.printStackTrace();
}
Um exemplo de resposta no formato XML √© apresentado a seguir:

EVENTO: CHARGE Dispon√≠vel

<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<transaction>
    <date>2019-08-19T18:10:02.000-03:00</date>
    <code>992582AF-FEBF-44FB-994B-81CD00B743B0</code>
    <type>1</type>
    <status>4</status>
    <lastEventDate>2019-09-18T03:31:52.000-03:00</lastEventDate>
    <paymentMethod>
        <type>1</type>
        <code>102</code>
    </paymentMethod>
    <grossAmount>5.00</grossAmount>
    <discountAmount>0.00</discountAmount>
    <creditorFees>
        <installmentFeeAmount>0.00</installmentFeeAmount>
        <intermediationRateAmount>0.40</intermediationRateAmount>
        <intermediationFeeAmount>0.20</intermediationFeeAmount>
    </creditorFees>
    <netAmount>4.40</netAmount>
    <extraAmount>0.00</extraAmount>
    <escrowEndDate>2019-09-18T01:00:00.000-03:00</escrowEndDate>
    <installmentCount>1</installmentCount>
    <itemCount>1</itemCount>
    <items>
        <item>
            <id>1</id>
            <description>Web</description>
            <quantity>1</quantity>
            <amount>5.00</amount>
        </item>
    </items>
    <primaryReceiver>
        <publicKey>PUB********************************</publicKey>
    </primaryReceiver>
</transaction>