-- =====================================================
-- VERIFICA√á√ÉO DOS DADOS REAIS DOS EVENTOS
-- =====================================================
-- Este script verifica se os eventos t√™m dados reais nos campos:
-- - classification (classifica√ß√£o et√°ria)
-- - attractions (atra√ß√µes)
-- - important_info (informa√ß√µes importantes)

-- =====================================================
-- 1. VERIFICAR ESTRUTURA DOS CAMPOS
-- =====================================================

-- Verificar se as colunas existem e seus tipos
SELECT 
  column_name,
  data_type,
  is_nullable,
  column_default
FROM information_schema.columns 
WHERE table_name = 'events' 
AND column_name IN ('classification', 'attractions', 'important_info')
ORDER BY column_name;

-- =====================================================
-- 2. VERIFICAR DADOS REAIS DOS EVENTOS
-- =====================================================

-- Contar eventos com dados reais vs dados padr√£o
SELECT 
  COUNT(*) as total_events,
  COUNT(CASE WHEN classification IS NOT NULL AND classification != 'Livre' THEN 1 END) as events_with_real_classification,
  COUNT(CASE WHEN attractions IS NOT NULL AND attractions != '{}' AND attractions != ARRAY['Programa√ß√£o especial'] THEN 1 END) as events_with_real_attractions,
  COUNT(CASE WHEN important_info IS NOT NULL AND important_info != '{}' AND important_info != ARRAY['Chegue com anteced√™ncia'] THEN 1 END) as events_with_real_important_info
FROM events;

-- =====================================================
-- 3. MOSTRAR EVENTOS COM DADOS REAIS
-- =====================================================

-- Eventos com classifica√ß√£o real (n√£o padr√£o)
SELECT 
  id,
  title,
  classification,
  created_at
FROM events 
WHERE classification IS NOT NULL 
  AND classification != 'Livre'
  AND classification != ''
ORDER BY created_at DESC;

-- Eventos com atra√ß√µes reais (n√£o padr√£o)
SELECT 
  id,
  title,
  attractions,
  created_at
FROM events 
WHERE attractions IS NOT NULL 
  AND attractions != '{}'
  AND attractions != ARRAY['Programa√ß√£o especial']
ORDER BY created_at DESC;

-- Eventos com informa√ß√µes importantes reais (n√£o padr√£o)
SELECT 
  id,
  title,
  important_info,
  created_at
FROM events 
WHERE important_info IS NOT NULL 
  AND important_info != '{}'
  AND important_info != ARRAY['Chegue com anteced√™ncia']
ORDER BY created_at DESC;

-- =====================================================
-- 4. MOSTRAR EVENTOS COM DADOS PADR√ÉO (PROBLEM√ÅTICOS)
-- =====================================================

-- Eventos que ainda t√™m dados padr√£o
SELECT 
  id,
  title,
  classification,
  attractions,
  important_info,
  created_at
FROM events 
WHERE (classification = 'Livre' OR classification IS NULL)
   OR (attractions = ARRAY['Programa√ß√£o especial'] OR attractions IS NULL OR attractions = '{}')
   OR (important_info = ARRAY['Chegue com anteced√™ncia'] OR important_info IS NULL OR important_info = '{}')
ORDER BY created_at DESC
LIMIT 10;

-- =====================================================
-- 5. VERIFICAR EVENTOS APROVADOS ESPECIFICAMENTE
-- =====================================================

-- Eventos aprovados com dados reais
SELECT 
  id,
  title,
  status,
  classification,
  attractions,
  important_info,
  created_at
FROM events 
WHERE status = 'approved'
ORDER BY created_at DESC
LIMIT 10;

-- =====================================================
-- 6. TESTE DE INSER√á√ÉO COM DADOS REAIS
-- =====================================================

-- Criar um evento de teste com dados reais para verificar
DO $$
DECLARE
  test_event_id UUID;
BEGIN
  -- Inserir evento de teste com dados reais
  INSERT INTO events (
    title,
    description,
    start_date,
    end_date,
    location,
    location_type,
    location_city,
    location_state,
    ticket_type,
    price,
    status,
    organizer_id,
    classification,
    attractions,
    important_info,
    created_at
  ) VALUES (
    'Evento de Teste - Dados Reais',
    'Evento para testar se os campos est√£o sendo salvos corretamente',
    NOW() + INTERVAL '1 day',
    NOW() + INTERVAL '2 days',
    'Local de Teste',
    'physical',
    'Cidade de Teste',
    'TS',
    'free',
    0,
    'pending',
    (SELECT id FROM profiles WHERE role = 'admin' LIMIT 1),
    '18', -- Classifica√ß√£o real
    ARRAY['Artista Principal', 'DJ Convidado', 'Banda de Abertura'], -- Atra√ß√µes reais
    ARRAY['Proibido entrada de menores de 18 anos', 'Traje: Esporte fino', 'N√£o √© permitido filmar'], -- Informa√ß√µes reais
    NOW()
  ) RETURNING id INTO test_event_id;
  
  RAISE NOTICE '‚úÖ Evento de teste criado com ID: %', test_event_id;
  
  -- Verificar se os dados foram salvos
  RAISE NOTICE 'üìã Verificando dados salvos...';
  
  PERFORM 
    classification,
    attractions,
    important_info
  FROM events 
  WHERE id = test_event_id;
  
  RAISE NOTICE '‚úÖ Dados verificados com sucesso';
  
  -- Limpar evento de teste
  DELETE FROM events WHERE id = test_event_id;
  RAISE NOTICE 'üóëÔ∏è Evento de teste removido';
  
EXCEPTION
  WHEN OTHERS THEN
    RAISE NOTICE '‚ùå Erro no teste: %', SQLERRM;
END $$;

-- =====================================================
-- 7. VERIFICA√á√ÉO FINAL
-- =====================================================

-- Resumo final dos dados
DO $$
BEGIN
  RAISE NOTICE '=== VERIFICA√á√ÉO FINAL DOS DADOS ===';
  
  DECLARE
    total_events INTEGER;
    events_with_real_classification INTEGER;
    events_with_real_attractions INTEGER;
    events_with_real_important_info INTEGER;
  BEGIN
    SELECT COUNT(*) INTO total_events FROM events;
    
    SELECT COUNT(*) INTO events_with_real_classification
    FROM events 
    WHERE classification IS NOT NULL 
      AND classification != 'Livre'
      AND classification != '';
    
    SELECT COUNT(*) INTO events_with_real_attractions
    FROM events 
    WHERE attractions IS NOT NULL 
      AND attractions != '{}'
      AND attractions != ARRAY['Programa√ß√£o especial'];
    
    SELECT COUNT(*) INTO events_with_real_important_info
    FROM events 
    WHERE important_info IS NOT NULL 
      AND important_info != '{}'
      AND important_info != ARRAY['Chegue com anteced√™ncia'];
    
    RAISE NOTICE 'üìä Total de eventos: %', total_events;
    RAISE NOTICE 'üìä Eventos com classifica√ß√£o real: %', events_with_real_classification;
    RAISE NOTICE 'üìä Eventos com atra√ß√µes reais: %', events_with_real_attractions;
    RAISE NOTICE 'üìä Eventos com informa√ß√µes importantes reais: %', events_with_real_important_info;
    
    IF events_with_real_classification > 0 AND events_with_real_attractions > 0 AND events_with_real_important_info > 0 THEN
      RAISE NOTICE '‚úÖ Eventos t√™m dados reais nos campos principais';
    ELSE
      RAISE NOTICE '‚ö†Ô∏è Ainda h√° eventos com dados padr√£o';
      RAISE NOTICE 'üîß Verifique se o EventFormModal est√° funcionando corretamente';
    END IF;
  END;
  
  RAISE NOTICE '=== VERIFICA√á√ÉO CONCLU√çDA ===';
END $$;

-- =====================================================
-- 8. INSTRU√á√ïES DE TESTE
-- =====================================================

/*
üéØ PROBLEMA IDENTIFICADO:

‚úÖ CAMPOS VERIFICADOS:
   - classification: Classifica√ß√£o et√°ria do evento
   - attractions: Array de atra√ß√µes/artistas
   - important_info: Array de informa√ß√µes importantes

‚úÖ VERIFICA√á√ïES REALIZADAS:
   - Estrutura das colunas
   - Dados reais vs dados padr√£o
   - Eventos aprovados
   - Teste de inser√ß√£o

üîß COMO RESOLVER:

1. ‚úÖ Execute este script no SQL Editor do Supabase
2. ‚úÖ Verifique se h√° eventos com dados reais
3. ‚úÖ Se n√£o houver, crie um novo evento usando o formul√°rio
4. ‚úÖ Verifique se os campos est√£o sendo preenchidos
5. ‚úÖ Teste a visualiza√ß√£o no EventPage

‚ö†Ô∏è IMPORTANTE:
- Eventos criados antes da corre√ß√£o podem ter dados padr√£o
- Novos eventos devem incluir dados reais automaticamente
- Verifique se o EventFormModal est√° funcionando

üöÄ RESULTADO ESPERADO:
- Eventos com classifica√ß√£o real (18, 16, 14, etc.)
- Eventos com atra√ß√µes reais (nomes de artistas)
- Eventos com informa√ß√µes importantes reais
- EventPage exibindo dados corretos
*/
